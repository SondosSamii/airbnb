[{"E:\\Projects\\airbnb\\src\\index.js":"1","E:\\Projects\\airbnb\\src\\App.js":"2","E:\\Projects\\airbnb\\src\\components\\routes.js":"3","E:\\Projects\\airbnb\\src\\components\\home.js":"4","E:\\Projects\\airbnb\\src\\components\\home\\home.js":"5","E:\\Projects\\airbnb\\src\\components\\footer.js":"6","E:\\Projects\\airbnb\\src\\components\\Forms\\editPlace.js":"7","E:\\Projects\\airbnb\\src\\components\\Forms\\host.js":"8","E:\\Projects\\airbnb\\src\\components\\PlaceD\\place-details.js":"9","E:\\Projects\\airbnb\\src\\components\\about\\about.js":"10","E:\\Projects\\airbnb\\src\\components\\Team\\our-team.js":"11","E:\\Projects\\airbnb\\src\\components\\Forms\\login.js":"12","E:\\Projects\\airbnb\\src\\components\\home\\slideshow.js":"13","E:\\Projects\\airbnb\\src\\components\\home\\places.js":"14","E:\\Projects\\airbnb\\src\\components\\home\\places-cards.js":"15","E:\\Projects\\airbnb\\src\\components\\Forms\\review.js":"16","E:\\Projects\\airbnb\\src\\actions\\reservations.js":"17","E:\\Projects\\airbnb\\src\\actions\\reviews.js":"18","E:\\Projects\\airbnb\\src\\actions\\places.js":"19","E:\\Projects\\airbnb\\src\\actions\\clients.js":"20","E:\\Projects\\airbnb\\src\\components\\calendar.js":"21","E:\\Projects\\airbnb\\src\\actions\\wishlists.js":"22","E:\\Projects\\airbnb\\src\\components\\Forms\\Signup.js":"23","E:\\Projects\\airbnb\\src\\components\\home\\searchbar.js":"24","E:\\Projects\\airbnb\\src\\components\\home\\features-icons.js":"25","E:\\Projects\\airbnb\\src\\reducers\\index.js":"26","E:\\Projects\\airbnb\\src\\components\\not-found.js":"27","E:\\Projects\\airbnb\\src\\components\\navbar.js":"28","E:\\Projects\\airbnb\\src\\components\\session.js":"29","E:\\Projects\\airbnb\\src\\components\\search\\search.js":"30","E:\\Projects\\airbnb\\src\\components\\reservations\\reservationForm.js":"31","E:\\Projects\\airbnb\\src\\components\\profile\\profile.js":"32","E:\\Projects\\airbnb\\src\\reducers\\places.js":"33","E:\\Projects\\airbnb\\src\\reducers\\reservations.js":"34","E:\\Projects\\airbnb\\src\\reducers\\wishlists.js":"35","E:\\Projects\\airbnb\\src\\reducers\\clients.js":"36","E:\\Projects\\airbnb\\src\\reducers\\reviews.js":"37","E:\\Projects\\airbnb\\src\\components\\search\\map.js":"38"},{"size":351,"mtime":1613745601690,"results":"39","hashOfConfig":"40"},{"size":454,"mtime":1613745600058,"results":"41","hashOfConfig":"40"},{"size":1907,"mtime":1613745601608,"results":"42","hashOfConfig":"40"},{"size":316,"mtime":1613745600881,"results":"43","hashOfConfig":"40"},{"size":1209,"mtime":1613745600955,"results":"44","hashOfConfig":"40"},{"size":2277,"mtime":1613745600846,"results":"45","hashOfConfig":"40"},{"size":30583,"mtime":1613745600224,"results":"46","hashOfConfig":"40"},{"size":29067,"mtime":1613745600260,"results":"47","hashOfConfig":"40"},{"size":17442,"mtime":1613745600488,"results":"48","hashOfConfig":"40"},{"size":3040,"mtime":1613745600642,"results":"49","hashOfConfig":"40"},{"size":10182,"mtime":1613745600563,"results":"50","hashOfConfig":"40"},{"size":8981,"mtime":1613745600266,"results":"51","hashOfConfig":"40"},{"size":974,"mtime":1613745601025,"results":"52","hashOfConfig":"40"},{"size":4569,"mtime":1613760716013,"results":"53","hashOfConfig":"40"},{"size":6258,"mtime":1613760544340,"results":"54","hashOfConfig":"40"},{"size":5311,"mtime":1613745600270,"results":"55","hashOfConfig":"40"},{"size":2269,"mtime":1613745600096,"results":"56","hashOfConfig":"40"},{"size":2323,"mtime":1613759832941,"results":"57","hashOfConfig":"40"},{"size":2780,"mtime":1613759751747,"results":"58","hashOfConfig":"40"},{"size":2939,"mtime":1613745600092,"results":"59","hashOfConfig":"40"},{"size":3834,"mtime":1613745600811,"results":"60","hashOfConfig":"40"},{"size":3203,"mtime":1613759815518,"results":"61","hashOfConfig":"40"},{"size":7470,"mtime":1613745600154,"results":"62","hashOfConfig":"40"},{"size":1712,"mtime":1613745601024,"results":"63","hashOfConfig":"40"},{"size":663,"mtime":1613745600906,"results":"64","hashOfConfig":"40"},{"size":337,"mtime":1613745601722,"results":"65","hashOfConfig":"40"},{"size":61586,"mtime":1613745601333,"results":"66","hashOfConfig":"40"},{"size":4700,"mtime":1613745601265,"results":"67","hashOfConfig":"40"},{"size":467,"mtime":1613745601652,"results":"68","hashOfConfig":"40"},{"size":6382,"mtime":1613745601631,"results":"69","hashOfConfig":"40"},{"size":5651,"mtime":1613745601605,"results":"70","hashOfConfig":"40"},{"size":23343,"mtime":1613746300820,"results":"71","hashOfConfig":"40"},{"size":693,"mtime":1613745601724,"results":"72","hashOfConfig":"40"},{"size":647,"mtime":1613745601747,"results":"73","hashOfConfig":"40"},{"size":642,"mtime":1613745601969,"results":"74","hashOfConfig":"40"},{"size":609,"mtime":1613745601692,"results":"75","hashOfConfig":"40"},{"size":664,"mtime":1613745601967,"results":"76","hashOfConfig":"40"},{"size":5075,"mtime":1613745601626,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1978ok",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"E:\\Projects\\airbnb\\src\\index.js",[],["162","163"],"E:\\Projects\\airbnb\\src\\App.js",[],"E:\\Projects\\airbnb\\src\\components\\routes.js",[],"E:\\Projects\\airbnb\\src\\components\\home.js",[],"E:\\Projects\\airbnb\\src\\components\\home\\home.js",[],"E:\\Projects\\airbnb\\src\\components\\footer.js",[],"E:\\Projects\\airbnb\\src\\components\\Forms\\editPlace.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./form.css\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport { getPlaceById, updatePlace } from \"../../actions/places\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nvar params = {\r\n  access_key: \"6895d17a0165c9fa200e743be896862d\",\r\n  query: \"1600 Pennsylvania Ave NW\",\r\n};\r\n\r\nclass EditPlace extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addActiveClass = this.addActiveClass.bind(this);\r\n    this.roomNum = React.createRef();\r\n    this.bathNum = React.createRef();\r\n    this.bedNum = React.createRef();\r\n    this.kitNum = React.createRef();\r\n    this.maxGuests = React.createRef();\r\n    this.rooms = 0;\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    isLogin: false,\r\n    place_id: \"\",\r\n    placedata: {},\r\n    token: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    price: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    room: 0,\r\n    bathroom: 0,\r\n    bedroom: 0,\r\n    kitchen: 0,\r\n    guests: 0,\r\n    tv: \"\",\r\n    aircon: \"\",\r\n    wifi: \"\",\r\n    heat: \"\",\r\n    pets: \"\",\r\n    photo: {},\r\n    files: [],\r\n    filesArr: [],\r\n    errors: {},\r\n    coordinates: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ token: localStorage.getItem(\"token\") });\r\n    this.setState({ UserId: localStorage.getItem(\"user_id\") });\r\n    if (!localStorage.getItem(\"token\")) {\r\n      alert(\"Please login frist!\");\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    await this.props.getPlaceById(this.props.match.params.id);\r\n    var place = this.props.placeDetails.place_details.place;\r\n    this.setState({ placedata: place });\r\n\r\n    this.setState({\r\n      name: this.state.placedata.name,\r\n      description: this.state.placedata.description,\r\n      type: this.state.placedata.type,\r\n      price: this.state.placedata.price,\r\n      city: this.state.placedata.address.city,\r\n      country: this.state.placedata.address.country,\r\n      zipcode: this.state.placedata.address.zipcode,\r\n      room: this.state.placedata.total_rooms,\r\n      bathroom: this.state.placedata.total_bathrooms,\r\n      bedroom: this.state.placedata.total_beds,\r\n      kitchen: this.state.placedata.total_kitchens,\r\n      guests: this.state.placedata.max_guests,\r\n      tv: this.state.placedata.has_tv,\r\n      aircon: this.state.placedata.has_airconditioner,\r\n      wifi: this.state.placedata.has_wifi,\r\n      heat: this.state.placedata.has_heating_system,\r\n      pets: this.state.placedata.pets,\r\n      photo: this.state.placedata.images,\r\n      coordinates: this.state.placedata.location,\r\n    });\r\n  }\r\n\r\n  //renderfile\r\n  Maping = () => {\r\n    var fileMap = this.state.filesArr.map((file, index) => {\r\n      let suffix = \"bytes\";\r\n      let size = file.size;\r\n      if (size >= 1024 && size < 1024000) {\r\n        suffix = \"KB\";\r\n        size = Math.round((size / 1024) * 100) / 100;\r\n      } else if (size >= 1024000) {\r\n        suffix = \"MB\";\r\n        size = Math.round((size / 1024000) * 100) / 100;\r\n      }\r\n      return (\r\n        <li key={index}>\r\n          {file.name}{\" \"}\r\n          <span className=\"file-size\">\r\n            {size} {suffix}\r\n          </span>\r\n          <MdDelete\r\n            className=\"delimg\"\r\n            onClick={() => this.deleteImg({ index })}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    return fileMap;\r\n  };\r\n\r\n  photomap = () => {\r\n    var fileMap = this.state.filesArr.map((file, index) => {\r\n      return file.name;\r\n    });\r\n    return fileMap;\r\n  };\r\n\r\n  RenderFileList() {\r\n    let map = this.Maping();\r\n    ReactDOM.render(map, document.getElementById(\"selectedfiles\"));\r\n  }\r\n\r\n  onFileChange = async (event) => {\r\n    let newfiles = document.getElementById(\"files\").files;\r\n    let newfilesArr = Array.from(newfiles);\r\n    this.state.photo = document.getElementById(\"files\").files;\r\n    await this.setState({ files: newfiles, filesArr: newfilesArr });\r\n    this.RenderFileList();\r\n  };\r\n  //delete photo\r\n  deleteImg(index) {\r\n    let key = index;\r\n    let curArr = this.state.filesArr;\r\n    let newfiles = new DataTransfer();\r\n    for (var i = 0; i < document.getElementById(\"files\").files.length; i++) {\r\n      if (i !== key.index) {\r\n        var file = document.getElementById(\"files\").files[i];\r\n        newfiles.items.add(file);\r\n      }\r\n    }\r\n    curArr.splice(key, 1);\r\n    this.setState({ filesArr: curArr });\r\n    this.state.photo = newfiles.files;\r\n    this.RenderFileList();\r\n  }\r\n\r\n  //checkbox change\r\n  handleInputChange = async (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const targetname = target.name;\r\n    let state = { ...this.state };\r\n    state[targetname] = value;\r\n    await this.setState(state);\r\n  };\r\n  handelchange = async (e) => {\r\n    this.state.errors[e.currentTarget.name] = null;\r\n    let state = { ...this.state };\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    await this.setState(state);\r\n  };\r\n\r\n  addActiveClass(i) {\r\n    var x = document.getElementById(i);\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n  AddNumber(type) {\r\n    if (type === \"room\") {\r\n      this.roomNum.current.value++;\r\n      this.state.room += 1;\r\n    } else if (type === \"bath\") {\r\n      this.bathNum.current.value++;\r\n      this.state.bathroom += 1;\r\n    } else if (type === \"bed\") {\r\n      this.bedNum.current.value++;\r\n      this.state.bedroom += 1;\r\n    } else if (type === \"kit\") {\r\n      this.kitNum.current.value++;\r\n      this.state.kitchen += 1;\r\n    } else if (type === \"guest\") {\r\n      this.maxGuests.current.value++;\r\n      this.state.guests += 1;\r\n    }\r\n  }\r\n  RemoveNumber(type) {\r\n    if (type == \"room\" && this.roomNum.current.value > 1) {\r\n      this.roomNum.current.value--;\r\n      this.state.room -= 1;\r\n    } else if (type == \"bath\" && this.bathNum.current.value > 1) {\r\n      this.bathNum.current.value--;\r\n      this.state.bathroom -= 1;\r\n    } else if (type == \"bed\" && this.bedNum.current.value > 1) {\r\n      this.bedNum.current.value--;\r\n      this.state.bedroom -= 1;\r\n    } else if (type == \"kit\" && this.kitNum.current.value > 0) {\r\n      this.kitNum.current.value--;\r\n      this.state.kitchen -= 1;\r\n    } else if (type == \"guest\" && this.maxGuests.current.value > 1) {\r\n      this.maxGuests.current.value--;\r\n      this.state.guests -= 1;\r\n    }\r\n  }\r\n\r\n  handleClick = async () => {\r\n    var coordinates = {\r\n      lat: \"\",\r\n      lng: \"\",\r\n    };\r\n    params.query = this.state.country;\r\n    await axios\r\n      .get(\"http://api.positionstack.com/v1/forward\", { params })\r\n      .then(async (response) => {\r\n        coordinates = {\r\n          lat: response.data.data[0].latitude,\r\n          lng: response.data.data[0].longitude,\r\n        };\r\n        await this.setState({ coordinates });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n    type: Joi.string().required(),\r\n    price: Joi.number().required(),\r\n    city: Joi.string().required(),\r\n    zipcode: Joi.required(),\r\n    country: Joi.string().required(),\r\n    room: Joi.number().required().min(1),\r\n    bathroom: Joi.number().required().min(1),\r\n    bedroom: Joi.number().required().min(1),\r\n    kitchen: Joi.number().required(),\r\n    guests: Joi.number().required().min(1),\r\n    tv: Joi.boolean().required(),\r\n    aircon: Joi.boolean().required(),\r\n    wifi: Joi.boolean().required(),\r\n    heat: Joi.boolean().required(),\r\n    pets: Joi.boolean().required(),\r\n    photo: Joi.required(),\r\n  };\r\n  Validations = () => {\r\n    const errors = {};\r\n    let state = { ...this.state };\r\n    delete state.errors;\r\n    delete state.files;\r\n    delete state.filesArr;\r\n    delete state.token;\r\n    delete state.isLogin;\r\n    delete state.coordinates;\r\n    delete state.place_id;\r\n    delete state.placedata;\r\n    delete state.UserId;\r\n    var res = Joi.validate(state, this.schema);\r\n    if (res.error === null) {\r\n      this.setState({ errors: {} });\r\n      return null;\r\n    }\r\n    for (const error of res.error.details) {\r\n      errors[error.path] = error.message;\r\n    }\r\n    this.setState({ errors: errors });\r\n  };\r\n  handelSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.Validations();\r\n    if (errors !== null) return;\r\n    await this.handleClick();\r\n    var ins = this.state.photo.length;\r\n    var formData = new FormData();\r\n    formData.append(\"name\", this.state.name);\r\n    formData.append(\"type\", this.state.type);\r\n    formData.append(\"description\", this.state.description);\r\n    formData.append(\"total_rooms\", this.state.room);\r\n    formData.append(\"total_kitchens\", this.state.kitchen);\r\n    formData.append(\"total_bathrooms\", this.state.bathroom);\r\n    formData.append(\"total_beds\", this.state.bedroom);\r\n    formData.append(\"price\", this.state.price);\r\n    formData.append(\"address[country]\", this.state.country);\r\n    formData.append(\"address[city]\", this.state.city);\r\n    formData.append(\"address[zipcode]\", this.state.zipcode);\r\n    formData.append(\"location[lat]\", this.state.coordinates.lat);\r\n    formData.append(\"location[lng]\", this.state.coordinates.lng);\r\n    formData.append(\"pets\", this.state.pets);\r\n    formData.append(\"has_tv\", this.state.tv);\r\n    formData.append(\"has_wifi\", this.state.wifi);\r\n    formData.append(\"has_heating_system\", this.state.heat);\r\n    formData.append(\"has_airconditioner\", this.state.aircon);\r\n    formData.append(\"max_guests\", this.state.guests);\r\n    for (var x = 0; x < ins; x++) {\r\n      formData.append(\"images[]\", this.state.photo[x]);\r\n    }\r\n    let url =\r\n      \"https://node-airbnb.herokuapp.com/api/place/\" +\r\n      this.props.match.params.id;\r\n    await this.props.updatePlace(formData, url, this.state.token);\r\n    toast.success(\"Updating... 😁\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    setTimeout(() => {\r\n      this.props.history.push(`/place-details/${this.props.match.params.id}`);\r\n    }, 3500);\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"host_form\"\r\n        className=\"background \"\r\n        style={{ backgroundImage: \"url(/bg.jpg)\", height: \"100%\" }}\r\n      >\r\n        <ToastContainer />\r\n        <div className=\"background pt-5 pb-5\" style={{ height: \"100%\" }}>\r\n          <h1 className=\"text-center pt-5\">Edit Your Place Information</h1>\r\n          <form className=\"form-signin\" action=\"\" method=\"POST\">\r\n            <div className=\"container signinClass \">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-12 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin my-5\">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"one\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Place Information <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"one\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Place Name:</label>\r\n                        <input\r\n                          name=\"name\"\r\n                          onChange={this.handelchange}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={this.state.name}\r\n                          placeholder=\"Enter the Place Name\"\r\n                        />\r\n                        {this.state.errors.name && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.name}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Description:</label>\r\n                        <textarea\r\n                          name=\"description\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.description}\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        ></textarea>\r\n                        {this.state.errors.description && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.description}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group \">\r\n                        <label className=\"ml-5 \">Place Type:</label>\r\n                        <select\r\n                          name=\"type\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.type}\r\n                          className=\"form-control\"\r\n                          id=\"type\"\r\n                        >\r\n                          <option defaultValue>Choose the place type...</option>\r\n                          <option value=\"Apartment\">Apartment</option>\r\n                          <option value=\"Cottage\">Cottage</option>\r\n                          <option value=\"Room\">Room</option>\r\n                          <option value=\"Villa\">Villa</option>\r\n                        </select>\r\n                        {this.state.errors.type && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.type}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Price per Night:</label>\r\n                        <input\r\n                          name=\"price\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.price}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"$ Enter price\"\r\n                          required\r\n                        />\r\n                        {this.state.errors.price && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.price}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-12 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"sec\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Place Location <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"sec\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Country:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.country}\r\n                          name=\"country\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.country && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">City:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.city}\r\n                          name=\"city\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.city && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Zipcode:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          value={this.state.zipcode}\r\n                          name=\"zipcode\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.zipcode && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-12 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin my-5\">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"rooms\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Number of Rooms <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"rooms\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Rooms:</label>\r\n                        <div\r\n                          className=\"plus btn\"\r\n                          onClick={() => this.AddNumber(\"room\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"room\"\r\n                          ref={this.roomNum}\r\n                          id=\"roomNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.room}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"room\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.room && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.room}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Bathrooms:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"bath\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"bathroom\"\r\n                          ref={this.bathNum}\r\n                          id=\"bathNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.bathroom}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"bath\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.bathroom && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.bathroom}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Beds:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"bed\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"bedroom\"\r\n                          ref={this.bedNum}\r\n                          id=\"bedNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.bedroom}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"bed\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.bedroom && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.bedroom}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Kitchens:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"kit\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"kitchen\"\r\n                          ref={this.kitNum}\r\n                          id=\"kitNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.kitchen}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"kit\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.kitchen && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.kitchen}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group \">\r\n                        <label className=\"ml-5 \">Number of Max Guests:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"guest\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"guests\"\r\n                          ref={this.maxGuests}\r\n                          id=\"maxGuests\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.guests}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"guest\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.guests && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.guests}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-12 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\"toggel\"\r\n                      onClick={() => this.addActiveClass(\"amenities\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Amenities you Offer\r\n                        <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"amenities\">\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"tv\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.tv}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">TV</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"wifi\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.wifi}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Wi-Fi</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"aircon\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.aircon}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Air Conditioner</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"heat\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.heat}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Heating System</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"pets\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.pets}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Allow Pets</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container signinClass mt-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-12 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"photos\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Uplode New Photos <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"photos\">\r\n                      <div className=\"form-label-group\">\r\n                        <div id=\"lblfile\">\r\n                          <label htmlFor=\"files\">\r\n                            <input\r\n                              name=\"photo\"\r\n                              type=\"file\"\r\n                              id=\"files\"\r\n                              multiple\r\n                              onChange={this.onFileChange}\r\n                            />\r\n                            Upload Files\r\n                          </label>\r\n                          {this.state.errors.photo && (\r\n                            <div className=\"alert alert-danger form-control\">\r\n                              {this.state.errors.photo}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"files\">\r\n                          <h2>Files Selected</h2>\r\n                          <ul id=\"selectedfiles\"></ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={this.handelSubmit}\r\n              style={{ height: \"50px\" }}\r\n              className=\"btn mybtn btn-lg btn-block text-uppercase submit-button mt-5 col-4 mb-5\"\r\n              type=\"submit\"\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updatePlace,\r\n      getPlaceById,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    placeDetails: state.Places,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops, mapactiontoprops)(EditPlace);\r\n","E:\\Projects\\airbnb\\src\\components\\Forms\\host.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { Component } from \"react\";\r\n// import React, { Component, createRef }  from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./form.css\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport { addplace } from \"../../actions/places\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nvar params = {\r\n  access_key: \"6895d17a0165c9fa200e743be896862d\",\r\n  query: \"1600 Pennsylvania Ave NW\",\r\n};\r\n\r\nclass Host extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addActiveClass = this.addActiveClass.bind(this);\r\n    this.roomNum = React.createRef();\r\n    this.bathNum = React.createRef();\r\n    this.bedNum = React.createRef();\r\n    this.kitNum = React.createRef();\r\n    this.maxGuests = React.createRef();\r\n    this.rooms = 0;\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    isLogin: true,\r\n    token: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    price: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    room: 0,\r\n    bathroom: 0,\r\n    bedroom: 0,\r\n    kitchen: 0,\r\n    guests: 0,\r\n    tv: false,\r\n    aircon: false,\r\n    wifi: false,\r\n    heat: false,\r\n    pets: false,\r\n    photo: {},\r\n    files: [],\r\n    filesArr: [],\r\n    errors: {},\r\n    coordinates: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ token: localStorage.getItem(\"token\") });\r\n    if (!localStorage.getItem(\"token\")) {\r\n      alert(\"please login frist!\");\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  //renderfile\r\n  Maping = () => {\r\n    var fileMap = this.state.filesArr.map((file, index) => {\r\n      let suffix = \"bytes\";\r\n      let size = file.size;\r\n      if (size >= 1024 && size < 1024000) {\r\n        suffix = \"KB\";\r\n        size = Math.round((size / 1024) * 100) / 100;\r\n      } else if (size >= 1024000) {\r\n        suffix = \"MB\";\r\n        size = Math.round((size / 1024000) * 100) / 100;\r\n      }\r\n      return (\r\n        <li key=\"{index}\">\r\n          {file.name}{\" \"}\r\n          <span className=\"file-size\">\r\n            {size} {suffix}\r\n          </span>\r\n          <MdDelete\r\n            className=\"delimg\"\r\n            onClick={() => this.deleteImg({ index })}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    return fileMap;\r\n  };\r\n\r\n  photomap = () => {\r\n    var fileMap = this.state.filesArr.map((file, index) => {\r\n      return file.name;\r\n    });\r\n    return fileMap;\r\n  };\r\n\r\n  RenderFileList() {\r\n    let map = this.Maping();\r\n    ReactDOM.render(map, document.getElementById(\"selectedfiles\"));\r\n  }\r\n  onFileChange = async (event) => {\r\n    let newfiles = document.getElementById(\"files\").files;\r\n    let newfilesArr = Array.from(newfiles);\r\n    this.state.photo = document.getElementById(\"files\").files;\r\n    await this.setState({ files: newfiles, filesArr: newfilesArr });\r\n    this.RenderFileList();\r\n  };\r\n\r\n  //delete photo\r\n  deleteImg(index) {\r\n    let key = index;\r\n    let curArr = this.state.filesArr;\r\n    let newfiles = new DataTransfer();\r\n    for (var i = 0; i < document.getElementById(\"files\").files.length; i++) {\r\n      if (i !== key.index) {\r\n        var file = document.getElementById(\"files\").files[i];\r\n        newfiles.items.add(file);\r\n      }\r\n    }\r\n    curArr.splice(key, 1);\r\n    this.setState({ filesArr: curArr });\r\n    this.state.photo = newfiles.files;\r\n    this.RenderFileList();\r\n  }\r\n\r\n  //checkbox change\r\n  handleInputChange = async (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const targetname = target.name;\r\n    let state = { ...this.state };\r\n    state[targetname] = value;\r\n    await this.setState(state);\r\n  };\r\n  handelchange = (e) => {\r\n    this.state.errors[e.currentTarget.name] = null;\r\n    let state = { ...this.state };\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  addActiveClass(i) {\r\n    var x = document.getElementById(i);\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  AddNumber(type) {\r\n    if (type === \"room\") {\r\n      this.roomNum.current.value++;\r\n      this.state.room += 1;\r\n    } else if (type === \"bath\") {\r\n      this.bathNum.current.value++;\r\n      this.state.bathroom += 1;\r\n    } else if (type === \"bed\") {\r\n      this.bedNum.current.value++;\r\n      this.state.bedroom += 1;\r\n    } else if (type === \"kit\") {\r\n      this.kitNum.current.value++;\r\n      this.state.kitchen += 1;\r\n    } else if (type === \"guest\") {\r\n      this.maxGuests.current.value++;\r\n      this.state.guests += 1;\r\n    }\r\n  }\r\n\r\n  RemoveNumber(type) {\r\n    if (type == \"room\" && this.roomNum.current.value > 1) {\r\n      this.roomNum.current.value--;\r\n      this.state.room -= 1;\r\n    } else if (type == \"bath\" && this.bathNum.current.value > 1) {\r\n      this.bathNum.current.value--;\r\n      this.state.bathroom -= 1;\r\n    } else if (type == \"bed\" && this.bedNum.current.value > 1) {\r\n      this.bedNum.current.value--;\r\n      this.state.bedroom -= 1;\r\n    } else if (type == \"kit\" && this.kitNum.current.value > 0) {\r\n      this.kitNum.current.value--;\r\n      this.state.kitchen -= 1;\r\n    } else if (type == \"guest\" && this.maxGuests.current.value > 1) {\r\n      this.maxGuests.current.value--;\r\n      this.state.guests -= 1;\r\n    }\r\n  }\r\n\r\n  handleClick = async () => {\r\n    var coordinates = {\r\n      lat: \"\",\r\n      lng: \"\",\r\n    };\r\n    params.query = this.state.country;\r\n    await axios\r\n      .get(\"http://api.positionstack.com/v1/forward\", { params })\r\n      .then(async (response) => {\r\n        coordinates = {\r\n          lat: response.data.data[0].latitude,\r\n          lng: response.data.data[0].longitude,\r\n        };\r\n        await this.setState({ coordinates });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n    type: Joi.string().required(),\r\n    price: Joi.number().required(),\r\n    city: Joi.string().required(),\r\n    zipcode: Joi.required(),\r\n    country: Joi.string().required(),\r\n    room: Joi.number().required().min(1),\r\n    bathroom: Joi.number().required().min(1),\r\n    bedroom: Joi.number().required().min(1),\r\n    kitchen: Joi.number().required(),\r\n    guests: Joi.number().required().min(1),\r\n    tv: Joi.boolean().required(),\r\n    aircon: Joi.boolean().required(),\r\n    wifi: Joi.boolean().required(),\r\n    heat: Joi.boolean().required(),\r\n    pets: Joi.boolean().required(),\r\n    photo: Joi.required(),\r\n  };\r\n\r\n  Validations = () => {\r\n    const errors = {};\r\n    let state = { ...this.state };\r\n    delete state.errors;\r\n    delete state.files;\r\n    delete state.filesArr;\r\n    delete state.token;\r\n    delete state.isLogin;\r\n    delete state.coordinates;\r\n    var res = Joi.validate(state, this.schema);\r\n    if (res.error === null) {\r\n      this.setState({ errors: {} });\r\n      return null;\r\n    }\r\n    for (const error of res.error.details) {\r\n      errors[error.path] = error.message;\r\n    }\r\n    this.setState({ errors: errors });\r\n    console.log(this.state.errors);\r\n  };\r\n\r\n  handelSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.Validations();\r\n    if (errors !== null) return;\r\n    await this.handleClick();\r\n    console.log(this.state.coordinates);\r\n    var ins = document.getElementById(\"files\").files.length;\r\n    var formData = new FormData();\r\n    formData.append(\"name\", this.state.name);\r\n    formData.append(\"type\", this.state.type);\r\n    formData.append(\"description\", this.state.description);\r\n    formData.append(\"total_rooms\", this.state.room);\r\n    formData.append(\"total_kitchens\", this.state.kitchen);\r\n    formData.append(\"total_bathrooms\", this.state.bathroom);\r\n    formData.append(\"total_beds\", this.state.bedroom);\r\n    formData.append(\"price\", this.state.price);\r\n    formData.append(\"address[country]\", this.state.country);\r\n    formData.append(\"address[city]\", this.state.city);\r\n    formData.append(\"address[zipcode]\", this.state.zipcode);\r\n    formData.append(\"location[lat]\", this.state.coordinates.lat);\r\n    formData.append(\"location[lng]\", this.state.coordinates.lng);\r\n    formData.append(\"pets\", this.state.pets);\r\n    formData.append(\"has_tv\", this.state.tv);\r\n    formData.append(\"has_wifi\", this.state.wifi);\r\n    formData.append(\"has_heating_system\", this.state.heat);\r\n    formData.append(\"has_airconditioner\", this.state.aircon);\r\n    formData.append(\"max_guests\", this.state.guests);\r\n    for (var x = 0; x < ins; x++) {\r\n      formData.append(\"images[]\", this.state.photo[x]);\r\n    }\r\n    let url = \"https://node-airbnb.herokuapp.com/api/place\";\r\n    await this.props.addplace(formData, url, this.state.token);\r\n    if (this.props.msg.message === \"place created successfully!\") {\r\n      toast.success(\"👌 Place added Successfully!\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTimeout(() => {\r\n        this.props.history.push(`/place-details/${this.props.msg.place._id}`);\r\n      }, 5500);\r\n    }\r\n  };\r\n  render() {\r\n    document.title = \"Add Place\";\r\n    return (\r\n      <div\r\n        id=\"host_form\"\r\n        className=\"background\"\r\n        style={{ backgroundImage: \"url(/bg.jpg)\", height: \"100%\" }}\r\n      >\r\n        <div className=\"background py-5\" style={{ height: \"100%\" }}>\r\n          <ToastContainer />\r\n          <form className=\"form-signin\" action=\"\" method=\"POST\">\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-8 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin my-5\">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"one\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Place Information <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"one\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Place Name:</label>\r\n                        <input\r\n                          name=\"name\"\r\n                          onChange={this.handelchange}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter the Place Name\"\r\n                        />\r\n                        {this.state.errors.name && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.name}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Description:</label>\r\n                        <textarea\r\n                          name=\"description\"\r\n                          onChange={this.handelchange}\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        ></textarea>\r\n                        {this.state.errors.description && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.description}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group \">\r\n                        <label className=\"ml-5 \">Place Type:</label>\r\n                        <select\r\n                          name=\"type\"\r\n                          onChange={this.handelchange}\r\n                          className=\"form-control\"\r\n                          id=\"type\"\r\n                        >\r\n                          <option defaultValue>Choose the place type...</option>\r\n                          <option value=\"Apartment\">Apartment</option>\r\n                          <option value=\"Cottage\">Cottage</option>\r\n                          <option value=\"Room\">Room</option>\r\n                          <option value=\"Villa\">Villa</option>\r\n                        </select>\r\n                        {this.state.errors.type && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.type}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Price per Night:</label>\r\n                        <input\r\n                          name=\"price\"\r\n                          onChange={this.handelchange}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"$ Enter price\"\r\n                          required\r\n                        />\r\n                        {this.state.errors.price && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.price}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-8 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"sec\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Place Location <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"sec\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Country:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          name=\"country\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.country && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">City:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          name=\"city\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.city && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Zipcode:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handelchange}\r\n                          name=\"zipcode\"\r\n                          className=\"form-control\"\r\n                          rows=\"3\"\r\n                        />\r\n                        {this.state.errors.zipcode && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.city}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-8 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin my-5\">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"rooms\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Number of Rooms <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"rooms\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Rooms:</label>\r\n                        <div\r\n                          className=\"plus btn\"\r\n                          onClick={() => this.AddNumber(\"room\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"room\"\r\n                          ref={this.roomNum}\r\n                          id=\"roomNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.room}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"room\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.room && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.room}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Bathrooms:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"bath\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"bathroom\"\r\n                          ref={this.bathNum}\r\n                          id=\"bathNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.bathroom}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"bath\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.bathroom && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.bathroom}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Beds:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"bed\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"bedroom\"\r\n                          ref={this.bedNum}\r\n                          id=\"bedNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.bedroom}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"bed\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.bedroom && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.bedroom}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Kitchens:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"kit\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"kitchen\"\r\n                          ref={this.kitNum}\r\n                          id=\"kitNum\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.kitchen}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"kit\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.kitchen && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.kitchen}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"ml-5\">Number of Max Guests:</label>\r\n                        <div\r\n                          className=\"plus btn \"\r\n                          onClick={() => this.AddNumber(\"guest\")}\r\n                        >\r\n                          +\r\n                        </div>\r\n                        <input\r\n                          name=\"guests\"\r\n                          ref={this.maxGuests}\r\n                          id=\"maxGuests\"\r\n                          type=\"text\"\r\n                          className=\"number form-control\"\r\n                          value={this.state.guests}\r\n                          disabled\r\n                        />\r\n                        <div\r\n                          className=\"minus btn\"\r\n                          onClick={() => this.RemoveNumber(\"guest\")}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                      {this.state.errors.guests && (\r\n                        <div className=\"alert alert-danger form-control\">\r\n                          {this.state.errors.guests}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container signinClass\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-8 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"amenities\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Amenities you Offer{\" \"}\r\n                        <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"amenities\">\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"tv\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.tv}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Tv</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"wifi\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.wifi}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">WI FI</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"aircon\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.aircon}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Air Conditioner</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"heat\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.heat}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Heat System</label>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          className=\"checkboxs\"\r\n                          name=\"pets\"\r\n                          type=\"checkbox\"\r\n                          checked={this.state.pets}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label className=\"ml-5\">Allow Pets</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container signinClass mt-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-8 col-lg-8 mx-auto\">\r\n                  <div className=\"card card-signin \">\r\n                    <div\r\n                      className=\" toggel \"\r\n                      onClick={() => this.addActiveClass(\"photos\")}\r\n                    >\r\n                      <h5 className=\"card-title text-center\">\r\n                        Add Photos <i className=\"fad fa-angle-down\"></i>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-body\" id=\"photos\">\r\n                      <div className=\"form-label-group\">\r\n                        <div id=\"lblfile\">\r\n                          <label htmlFor=\"files\">\r\n                            <input\r\n                              name=\"photo\"\r\n                              type=\"file\"\r\n                              id=\"files\"\r\n                              multiple\r\n                              onChange={this.onFileChange}\r\n                            />\r\n                            Upload Files\r\n                          </label>\r\n                          {this.state.errors.photo && (\r\n                            <div className=\"alert alert-danger form-control\">\r\n                              {this.state.errors.photo}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"files\">\r\n                          <h2>Files Selected</h2>\r\n                          <ul id=\"selectedfiles\"></ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={this.handelSubmit}\r\n              style={{ height: \"50px\" }}\r\n              className=\"btn mybtn btn-lg btn-block text-uppercase submit-button mt-5 col-4 mb-5\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      addplace,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    placeDetails: state.Places,\r\n    msg: state.Places.message,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops, mapactiontoprops)(Host);\r\n","E:\\Projects\\airbnb\\src\\components\\PlaceD\\place-details.js",[],"E:\\Projects\\airbnb\\src\\components\\about\\about.js",[],"E:\\Projects\\airbnb\\src\\components\\Team\\our-team.js",[],"E:\\Projects\\airbnb\\src\\components\\Forms\\login.js",["198","199","200"],"import React, { Component } from \"react\";\r\nimport \"./form.css\";\r\nimport Signup from \"./Signup\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { login } from \"../../actions/clients\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checked = React.createRef();\r\n    this.addActiveClass = this.addActiveClass.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n  //static contextType = SessionContext;\r\n  state = {\r\n    //login state\r\n    Email: \"\",\r\n    Password: \"\",\r\n    errors: {},\r\n    token: \"\",\r\n    isAuth: false,\r\n    user_id: \"\",\r\n    isChecked: false,\r\n  };\r\n  async componentDidMount() {\r\n    if (localStorage.checked === \"true\") {\r\n      await this.setState({\r\n        Email: localStorage.email,\r\n        Password: localStorage.password,\r\n        isChecked: true,\r\n      });\r\n    } else {\r\n      await this.setState({ Email: \"\", Password: \"\", isChecked: false });\r\n    }\r\n  }\r\n\r\n  schema = {\r\n    Email: Joi.string().required().email(),\r\n    Password: Joi.string().required(),\r\n  };\r\n  handelchange = (e) => {\r\n    this.state.errors[e.currentTarget.name] = null;\r\n    let state = { ...this.state };\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  Validations = () => {\r\n    const errors = {};\r\n    let state = { ...this.state };\r\n    delete state.errors;\r\n    delete state.isAuth;\r\n    delete state.token;\r\n    delete state.user_id;\r\n    delete state.isChecked;\r\n    var res = Joi.validate(state, this.schema, { abortEarly: false });\r\n    if (res.error === null) {\r\n      this.setState({ errors: {} });\r\n      return null;\r\n    }\r\n    for (const error of res.error.details) {\r\n      errors[error.path] = error.message;\r\n    }\r\n    this.setState({ errors: errors });\r\n  };\r\n\r\n  handleInputChange = async (e) => {\r\n    this.setState({ isChecked: e.currentTarget.checked });\r\n  };\r\n\r\n  handelLogin = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.Validations();\r\n    if (errors !== null) return;\r\n    var formData = new FormData();\r\n    formData.append(\"email\", this.state.Email);\r\n    formData.append(\"password\", this.state.Password);\r\n    let url = \"https://node-airbnb.herokuapp.com/api/login\";\r\n    await this.props.login(formData, url);\r\n\r\n    if (\r\n      this.props.client.message === \"A user with this email could not be found.\"\r\n    ) {\r\n      window.alert(\"A user with this email could not be found.\");\r\n    } else if (this.props.client.message === \"Wrong password!\") {\r\n      window.alert(\"Wrong password!\");\r\n    } else {\r\n      await localStorage.setItem(\"token\", this.props.client.token);\r\n      await localStorage.setItem(\"user_id\", this.props.client.user_id);\r\n    }\r\n    if (this.state.isChecked === true) {\r\n      await localStorage.setItem(\"email\", this.state.Email);\r\n      await localStorage.setItem(\"password\", this.state.Password);\r\n      await localStorage.setItem(\"checked\", this.state.isChecked);\r\n    } else {\r\n      await localStorage.removeItem(\"email\");\r\n      await localStorage.removeItem(\"password\");\r\n      await localStorage.removeItem(\"checked\");\r\n    }\r\n    if (this.props.client.token) {\r\n      this.setState({\r\n        isAuth: true,\r\n        token: this.props.client.token,\r\n        user_id: this.props.client.user_id,\r\n      });\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  addActiveClass(i) {\r\n    var li1 = document.getElementById(\"li1\");\r\n    var li2 = document.getElementById(\"li2\");\r\n    var a1 = document.getElementById(\"a1\");\r\n    var a2 = document.getElementById(\"a2\");\r\n    var signin = document.getElementById(\"signin\");\r\n    var signup = document.getElementById(\"signup\");\r\n    if (i === \"1\") {\r\n      li1.classList.add(\"active\");\r\n      a1.classList.add(\"active-text\");\r\n      li2.classList.remove(\"active\");\r\n      a2.classList.remove(\"active-text\");\r\n      signin.classList.remove(\"d-none\");\r\n      signup.classList.add(\"d-none\");\r\n    } else if (i === \"2\") {\r\n      li1.classList.remove(\"active\");\r\n      a1.classList.remove(\"active-text\");\r\n      li2.classList.add(\"active\");\r\n      a2.classList.add(\"active-text\");\r\n      signin.classList.add(\"d-none\");\r\n      signup.classList.remove(\"d-none\");\r\n    }\r\n  }\r\n  render() {\r\n    document.title = \"Where To? - Login or Sign Up\";\r\n    return (\r\n      <section\r\n        id=\"login_form\"\r\n        className=\"background\"\r\n        style={{ backgroundImage: \"url(/bg.jpg)\" }}\r\n      >\r\n        <div className=\"background p-3\">\r\n          <div className=\"pt-4\">\r\n            <div\r\n              className=\"buttons-container mx-auto mt-5\"\r\n              style={{ width: \"220px\" }}\r\n            >\r\n              <ul>\r\n                <li\r\n                  onClick={() => this.addActiveClass(\"1\")}\r\n                  id=\"li1\"\r\n                  className=\"active\"\r\n                >\r\n                  <a id=\"a1\" className=\"active-text\">\r\n                    <FiLogIn />\r\n                  </a>\r\n                </li>\r\n\r\n                <li onClick={() => this.addActiveClass(\"2\")} id=\"li2\">\r\n                  <a id=\"a2\">\r\n                    <FaUserPlus />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"signin\" className=\"container signinClass\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-sm-9 col-md-7 col-lg-5\">\r\n                <div className=\"card card-signin my-5\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center mt-0\">\r\n                      Welcome back!\r\n                    </h5>\r\n                    <form\r\n                      onSubmit={this.handelLogin}\r\n                      className=\"form-signin\"\r\n                      method=\"POST\"\r\n                    >\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          name=\"Email\"\r\n                          value={this.state.Email}\r\n                          onChange={this.handelchange}\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email address\"\r\n                        />\r\n                        {this.state.errors.Email && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.Email}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          name=\"Password\"\r\n                          value={this.state.Password}\r\n                          onChange={this.handelchange}\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                        {this.state.errors.Password && (\r\n                          <div className=\"alert alert-danger form-control\">\r\n                            {this.state.errors.Password}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"custom-control custom-checkbox text-center mt-2 mb-2\">\r\n                        <input\r\n                          name=\"isChecked\"\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input\"\r\n                          id=\"customCheck1\"\r\n                          checked={this.state.isChecked}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor=\"customCheck1\"\r\n                        >\r\n                          Remember Me\r\n                        </label>\r\n                      </div>\r\n\r\n                      <button\r\n                        className=\"mybtn btn-lg btn-block text-uppercase submit-button\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"signup\" className=\"container d-none signupClass\">\r\n            <Signup history={this.props.history} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      login,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    client: state.Clients,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops, mapactiontoprops)(Login);\r\n","E:\\Projects\\airbnb\\src\\components\\home\\slideshow.js",[],"E:\\Projects\\airbnb\\src\\components\\home\\places.js",[],"E:\\Projects\\airbnb\\src\\components\\home\\places-cards.js",["201"],"E:\\Projects\\airbnb\\src\\components\\Forms\\review.js",["202","203","204"],"import React, { Component } from \"react\";\r\nimport \"./form.css\";\r\nimport { AddReview } from \"../../actions/reviews\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Joi from \"joi-browser\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass ReviewAdding extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.rate = React.createRef();\r\n  }\r\n  state = {\r\n    Rate: 0,\r\n    Comment: \"\",\r\n    Place_id: this.props.id,\r\n    errors: [],\r\n  };\r\n  schema = {\r\n    Rate: Joi.number().required().min(1).max(5),\r\n    Comment: Joi.string().required(),\r\n  };\r\n  Validations = () => {\r\n    const errors = {};\r\n    let state = { ...this.state };\r\n    delete state.errors;\r\n    delete state.Place_id;\r\n    var res = Joi.validate(state, this.schema, { abortEarly: false });\r\n    if (res.error === null) {\r\n      this.setState({ errors: {} });\r\n      return null;\r\n    }\r\n    for (const error of res.error.details) {\r\n      errors[error.path] = error.message;\r\n    }\r\n    this.setState({ errors: errors });\r\n    console.log(this.state.errors);\r\n  };\r\n  handelchange = (e) => {\r\n    this.state.errors[e.currentTarget.name] = null;\r\n    let state = { ...this.state };\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState(state);\r\n  };\r\n  AddNumber(type) {\r\n    if (this.rate.current.value < 5) {\r\n      this.rate.current.value++;\r\n      this.state.Rate += 1;\r\n    }\r\n  }\r\n  RemoveNumber(type) {\r\n    if (this.rate.current.value > 1) {\r\n      this.rate.current.value--;\r\n      this.state.Rate -= 1;\r\n    }\r\n  }\r\n  handelAdd = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.Validations();\r\n    if (errors !== null) return;\r\n    var formData = new FormData();\r\n    formData.append(\"rating\", this.state.Rate);\r\n    formData.append(\"comment\", this.state.Comment);\r\n    let url =\r\n      \"https://node-airbnb.herokuapp.com/api/review/\" + this.state.Place_id;\r\n    await this.props.AddReview(formData, url, localStorage.token);\r\n    toast.success(\"🤩 Review added Successfully!\", {\r\n      position: \"top-center\",\r\n      autoClose: 8000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 8500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container signinClass mt-0\">\r\n        <ToastContainer />\r\n        <div className=\"row\">\r\n          <div className=\" col-12 mx-auto\">\r\n            <div className=\"card card-signin mb-5\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center mt-0\">Add New Review</h5>\r\n                <form\r\n                  onSubmit={this.handelAdd}\r\n                  className=\"form-signin\"\r\n                  method=\"POST\"\r\n                >\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      name=\"Comment\"\r\n                      value={this.state.Comment}\r\n                      onChange={this.handelchange}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter Your Comment\"\r\n                    />\r\n                    {this.state.errors.Comment && (\r\n                      <div className=\"alert alert-danger form-control\">\r\n                        {this.state.errors.Comment}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-label-group row pb-3\">\r\n                    <label className=\"ml-5 col-12\">Rate:</label>\r\n                    <div\r\n                      className=\"plus btn \"\r\n                      onClick={() => this.AddNumber(\"bath\")}\r\n                    >\r\n                      +\r\n                    </div>\r\n                    <input\r\n                      name=\"Rate\"\r\n                      ref={this.rate}\r\n                      id=\"Rate\"\r\n                      type=\"text\"\r\n                      className=\"number form-control\"\r\n                      value={this.state.Rate}\r\n                      disabled\r\n                    />\r\n                    <div\r\n                      className=\"minus btn\"\r\n                      onClick={() => this.RemoveNumber(\"bath\")}\r\n                    >\r\n                      -\r\n                    </div>\r\n                  </div>\r\n                  {this.state.errors.Rate && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      {this.state.errors.Rate}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"mybtn btn-lg btn-block text-uppercase submit-button\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Add Review\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      AddReview,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    reviews: state.Reviews.addreview,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops, mapactiontoprops)(ReviewAdding);\r\n","E:\\Projects\\airbnb\\src\\actions\\reservations.js",[],"E:\\Projects\\airbnb\\src\\actions\\reviews.js",[],"E:\\Projects\\airbnb\\src\\actions\\places.js",["205","206"],"E:\\Projects\\airbnb\\src\\actions\\clients.js",["207","208"],"import axios from \"axios\";\r\n\r\n// const baseUrl = \"http://localhost:1337/api/clients\";\r\n// const baseUrl = \"http://my-json-server.typicode.com/sondossamii/airbnb/clients\";\r\n\r\nconst url = \"https://node-airbnb.herokuapp.com/api/client\";\r\nconst update_pass_url = \"https://node-airbnb.herokuapp.com/api/clientPassword\";\r\n\r\nexport async function AllClients() {\r\n  var payload = null;\r\n  try {\r\n    let url = \"https://node-airbnb.herokuapp.com/api/clients\";\r\n    const res = await fetch(url);\r\n    payload = await res.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return { type: \"AllClients2\", payload };\r\n}\r\n\r\nexport async function updateClient(token, client) {\r\n  var payload = null;\r\n  try {\r\n    await axios\r\n      .put(`${url}`, client, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        payload = \"successUpdated\";\r\n      })\r\n      .catch((err) => {\r\n        payload = \"fail To update\";\r\n      });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return {\r\n    type: \"update_Client\",\r\n    payload,\r\n  };\r\n}\r\nexport async function updatePassword(token, clientPasswords) {\r\n  var payload = null;\r\n  try {\r\n    await axios\r\n      .put(`${update_pass_url}`, clientPasswords, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        payload = res;\r\n      })\r\n      .catch((err) => {\r\n        payload = \"Wrong password!\";\r\n      });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return {\r\n    type: \"update_password\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport async function getclientById(token) {\r\n  var payload = null;\r\n  try {\r\n    let response = await fetch(`${url}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    payload = await response.json();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return {\r\n    type: \"clientDetails\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport async function addclient(formData, url) {\r\n  var payload = null;\r\n  try {\r\n    let response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => {\r\n        payload = response.json();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return {\r\n    type: \"addClient\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport async function login(formData, url) {\r\n  var payload = null;\r\n  try {\r\n    let response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => {\r\n        payload = response.json();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return {\r\n    type: \"login\",\r\n    payload,\r\n  };\r\n}\r\n","E:\\Projects\\airbnb\\src\\components\\calendar.js",["209"],"import React, { Component } from \"react\";\r\nimport Calendar from \"react-date-range-calendar\";\r\n\r\nimport \"react-date-range/dist/styles.css\"; // main style file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getPlaceReservations,\r\n  getReservationByID_NotAuth,\r\n} from \"../actions/reservations\";\r\n\r\nclass CalendarComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Days: [],\r\n      place_id: \"\",\r\n      token: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      length: 0,\r\n    };\r\n  }\r\n  getDaysArray = (s, e) => {\r\n    for (var a = [], d = new Date(s); d <= e; d.setDate(d.getDate() + 1)) {\r\n      //    a.push(new Date(d).toISOString().slice(0,10));\r\n      this.setState((state) => {\r\n        const Days = state.Days.push(new Date(d).toISOString().slice(0, 10));\r\n        return Days;\r\n      });\r\n    }\r\n    this.setState({ length: this.state.Days.length });\r\n    return a;\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ token: localStorage.getItem(\"token\") });\r\n    this.setState({ place_id: await this.props.props.match.params.id });\r\n\r\n    await this.props.getPlaceReservations(this.state.place_id);\r\n\r\n    await this.props.place_reservations.reservations.map(\r\n      async (reservation_id) => {\r\n        await this.props.getReservationByID_NotAuth(reservation_id);\r\n        var reservation_obj = this.props.reservation_details_Not_Auth\r\n          .reservation;\r\n        this.setState({\r\n          startDate: reservation_obj.start_date,\r\n          endDate: reservation_obj.end_date,\r\n        });\r\n        this.getDaysArray(\r\n          new Date(this.state.startDate),\r\n          new Date(this.state.endDate)\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  renderDays = () => {\r\n    return (\r\n      <Calendar\r\n        disabledDates={() => {\r\n          return this.state.Days;\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    var flag = this.state.length === this.state.Days.length;\r\n\r\n    return (\r\n      <>\r\n        {flag && (\r\n          <Calendar\r\n            disabledDates={() => {\r\n              if (this.state.Days.length > 0) {\r\n                return this.state.Days;\r\n              } else {\r\n                return [];\r\n              }\r\n            }}\r\n            onSelect={(startDate, endDate, validDateRange) => {\r\n              this.props.dates(startDate, endDate, validDateRange);\r\n            }}\r\n            rightArrowCss=\"padding-left: 5px; &:hover { background: var(--secondary-color); }\"\r\n            leftArrowCss=\"padding-left: 5px; &:hover { background: var(--secondary-color); }\"\r\n            thCss=\"color:var(--secondary-color); }\"\r\n            startDateTdCssObj={{\r\n              backgroundColor: \"var(--secondary-color)\",\r\n              color: \"#fff\",\r\n            }}\r\n            endDateTdCssObj={{\r\n              backgroundColor: \"var(--secondary-color)\",\r\n              color: \"#fff\",\r\n            }}\r\n            inRangedTdCssObj={{\r\n              backgroundColor: \"var(--secondary-light-color)\",\r\n              color: \"#fff\",\r\n            }}\r\n            onHoverTdCssObj={{\r\n              backgroundColor: \"var(--secondary-color)\",\r\n              color: \"#fff\",\r\n            }}\r\n            disablePrevDates\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getPlaceReservations,\r\n      getReservationByID_NotAuth,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    place_reservations: state.Reservations.place_reservations,\r\n    reservation_details_Not_Auth:\r\n      state.Reservations.reservation_details_Not_Auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapstatetoprops, mapactiontoprops)(CalendarComp);\r\n","E:\\Projects\\airbnb\\src\\actions\\wishlists.js",[],"E:\\Projects\\airbnb\\src\\components\\Forms\\Signup.js",["210","211","212","213"],"import React, { Component } from \"react\";\r\n// import React, { Component, createRef  }  from 'react';\r\nimport \"./form.css\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport { setSessionCookie } from \"../session\";\r\nimport { addclient } from \"../../actions/clients\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    UserName: \"\",\r\n    Email: \"\",\r\n    PhoneNumber: \"\",\r\n    Password: \"\",\r\n    Password_confirm: \"\",\r\n    Signup_errors: {},\r\n  };\r\n\r\n  ///start login form functions\r\n  handelchange = (e) => {\r\n    this.state.Signup_errors[e.currentTarget.name] = null;\r\n    let state = { ...this.state };\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  schema = {\r\n    UserName: Joi.string().required().max(15),\r\n    Email: Joi.string().required().email(),\r\n    Password: Joi.string().trim().required().min(5).max(20),\r\n    Password_confirm: Joi.any().equal(Joi.ref(\"Password\")),\r\n    PhoneNumber: Joi.string()\r\n      .required()\r\n      .regex(/^[0-9]+$/)\r\n      .required(),\r\n  };\r\n\r\n  signupValidations = () => {\r\n    const errors = {};\r\n    let state = { ...this.state };\r\n    delete state.Signup_errors;\r\n    var res = Joi.validate(state, this.schema, { abortEarly: false });\r\n    if (res.error === null) {\r\n      this.setState({ Signup_errors: {} });\r\n      return null;\r\n    }\r\n    for (const error of res.error.details) {\r\n      errors[error.path] = error.message;\r\n    }\r\n    console.log(res.error.details);\r\n    this.setState({ Signup_errors: errors });\r\n  };\r\n\r\n  handelsignup = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.signupValidations();\r\n    if (errors !== null) return;\r\n\r\n    var formData = new FormData();\r\n    formData.append(\"name\", this.state.UserName);\r\n    formData.append(\"email\", this.state.Email);\r\n    formData.append(\"password\", this.state.Password);\r\n    formData.append(\"phone\", this.state.PhoneNumber);\r\n    formData.append(\"is_host\", false);\r\n    let url = \"https://node-airbnb.herokuapp.com/api/signup\";\r\n    await this.props.addclient(formData, url);\r\n    if (this.props.client.message === \"Validation failed.\") {\r\n      window.alert(this.props.client.data[0].msg);\r\n    } else {\r\n      var email = this.state.Email;\r\n      var password = this.state.password;\r\n      setSessionCookie({ email, password });\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"signup_form\" className=\"row justify-content-center\">\r\n        <div className=\"col-sm-9 col-md-7 col-lg-5\">\r\n          <div className=\"card card-signin my-5\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-center mt-0\">Register</h5>\r\n              <form\r\n                onSubmit={this.handelsignup}\r\n                className=\"form-signin\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"form-label-group\">\r\n                  <input\r\n                    value={this.state.UserName}\r\n                    onChange={this.handelchange}\r\n                    name=\"UserName\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"User Name\"\r\n                  />\r\n                  {this.state.Signup_errors.UserName && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      {this.state.Signup_errors.UserName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-label-group\">\r\n                  <input\r\n                    value={this.state.Email}\r\n                    onChange={this.handelchange}\r\n                    name=\"Email\"\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email address\"\r\n                  />\r\n                  {this.state.Signup_errors.Email && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      {this.state.Signup_errors.Email}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-label-group\">\r\n                  <input\r\n                    value={this.state.PhoneNumber}\r\n                    onChange={this.handelchange}\r\n                    name=\"PhoneNumber\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Phone Number\"\r\n                  />\r\n                  {this.state.Signup_errors.PhoneNumber && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      Not valid\r\n                      {/* {this.state.Signup_errors.PhoneNumber} */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-label-group\">\r\n                  <input\r\n                    value={this.state.Password}\r\n                    onChange={this.handelchange}\r\n                    name=\"Password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  {this.state.Signup_errors.Password && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      {this.state.Signup_errors.Password}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-label-group\">\r\n                  <input\r\n                    value={this.state.Password_confirm}\r\n                    onChange={this.handelchange}\r\n                    name=\"Password_confirm\"\r\n                    type=\"password\"\r\n                    id=\"inputConfirmPassword\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Confirm password\"\r\n                  />\r\n                  {this.state.Signup_errors.Password_confirm && (\r\n                    <div className=\"alert alert-danger form-control\">\r\n                      Password confirmation must equal to password\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* <div className=\"custom-control custom-checkbox text-center mt-2 mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customCheck2\"\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label text-link\"\r\n                    htmlFor=\"customCheck2\"\r\n                  >\r\n                    Agree to <Link to=\"/terms\">Terms and Conditions</Link>\r\n                  </label>\r\n                </div> */}\r\n\r\n                <button\r\n                  className=\"mybtn btn-lg btn-block text-uppercase submit-button\"\r\n                  type=\"submit\"\r\n                >\r\n                  Register\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapactiontoprops = (disptch) => {\r\n  return bindActionCreators(\r\n    {\r\n      addclient,\r\n    },\r\n    disptch\r\n  );\r\n};\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    client: state.Clients,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops, mapactiontoprops)(Signup);\r\n","E:\\Projects\\airbnb\\src\\components\\home\\searchbar.js",[],"E:\\Projects\\airbnb\\src\\components\\home\\features-icons.js",[],"E:\\Projects\\airbnb\\src\\reducers\\index.js",[],"E:\\Projects\\airbnb\\src\\components\\not-found.js",[],"E:\\Projects\\airbnb\\src\\components\\navbar.js",[],"E:\\Projects\\airbnb\\src\\components\\session.js",[],"E:\\Projects\\airbnb\\src\\components\\search\\search.js",[],"E:\\Projects\\airbnb\\src\\components\\reservations\\reservationForm.js",[],"E:\\Projects\\airbnb\\src\\components\\profile\\profile.js",[],"E:\\Projects\\airbnb\\src\\reducers\\places.js",[],"E:\\Projects\\airbnb\\src\\reducers\\reservations.js",[],"E:\\Projects\\airbnb\\src\\reducers\\wishlists.js",[],"E:\\Projects\\airbnb\\src\\reducers\\clients.js",[],"E:\\Projects\\airbnb\\src\\reducers\\reviews.js",[],"E:\\Projects\\airbnb\\src\\components\\search\\map.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":153,"column":5,"nodeType":"220","endLine":153,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":167,"column":5,"nodeType":"220","endLine":167,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":184,"column":7,"nodeType":"220","endLine":184,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":187,"column":7,"nodeType":"220","endLine":187,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":190,"column":7,"nodeType":"220","endLine":190,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":193,"column":7,"nodeType":"220","endLine":193,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":196,"column":7,"nodeType":"220","endLine":196,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":200,"column":14,"nodeType":"223","messageId":"224","endLine":200,"endColumn":16},{"ruleId":"218","severity":1,"message":"219","line":202,"column":7,"nodeType":"220","endLine":202,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":203,"column":21,"nodeType":"223","messageId":"224","endLine":203,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":205,"column":7,"nodeType":"220","endLine":205,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":206,"column":21,"nodeType":"223","messageId":"224","endLine":206,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":208,"column":7,"nodeType":"220","endLine":208,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":209,"column":21,"nodeType":"223","messageId":"224","endLine":209,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":211,"column":7,"nodeType":"220","endLine":211,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":212,"column":21,"nodeType":"223","messageId":"224","endLine":212,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":214,"column":7,"nodeType":"220","endLine":214,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":126,"column":5,"nodeType":"220","endLine":126,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":140,"column":5,"nodeType":"220","endLine":140,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":158,"column":7,"nodeType":"220","endLine":158,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":161,"column":7,"nodeType":"220","endLine":161,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":164,"column":7,"nodeType":"220","endLine":164,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":167,"column":7,"nodeType":"220","endLine":167,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":170,"column":7,"nodeType":"220","endLine":170,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":175,"column":14,"nodeType":"223","messageId":"224","endLine":175,"endColumn":16},{"ruleId":"218","severity":1,"message":"219","line":177,"column":7,"nodeType":"220","endLine":177,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":178,"column":21,"nodeType":"223","messageId":"224","endLine":178,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":180,"column":7,"nodeType":"220","endLine":180,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":181,"column":21,"nodeType":"223","messageId":"224","endLine":181,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":183,"column":7,"nodeType":"220","endLine":183,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":184,"column":21,"nodeType":"223","messageId":"224","endLine":184,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":186,"column":7,"nodeType":"220","endLine":186,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":187,"column":21,"nodeType":"223","messageId":"224","endLine":187,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":189,"column":7,"nodeType":"220","endLine":189,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":46,"column":5,"nodeType":"220","endLine":46,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":157,"column":19,"nodeType":"227","endLine":157,"endColumn":54},{"ruleId":"225","severity":1,"message":"226","line":163,"column":19,"nodeType":"227","endLine":163,"endColumn":30},{"ruleId":"228","severity":1,"message":"229","line":100,"column":17,"nodeType":"230","messageId":"231","endLine":100,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":41,"column":5,"nodeType":"220","endLine":41,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":49,"column":7,"nodeType":"220","endLine":49,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":55,"column":7,"nodeType":"220","endLine":55,"endColumn":17},{"ruleId":"228","severity":1,"message":"232","line":74,"column":9,"nodeType":"230","messageId":"231","endLine":74,"endColumn":17},{"ruleId":"228","severity":1,"message":"232","line":103,"column":9,"nodeType":"230","messageId":"231","endLine":103,"endColumn":17},{"ruleId":"228","severity":1,"message":"232","line":93,"column":9,"nodeType":"230","messageId":"231","endLine":93,"endColumn":17},{"ruleId":"228","severity":1,"message":"232","line":115,"column":9,"nodeType":"230","messageId":"231","endLine":115,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":28,"column":21,"nodeType":"235","messageId":"236","endLine":31,"endColumn":8},{"ruleId":"228","severity":1,"message":"237","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":13},{"ruleId":"228","severity":1,"message":"238","line":10,"column":21,"nodeType":"230","messageId":"231","endLine":10,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":4},{"ruleId":"218","severity":1,"message":"219","line":27,"column":5,"nodeType":"220","endLine":27,"endColumn":29},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'wishlist_Obj' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'd'.","ArrowFunctionExpression","unsafeRefs","'axios' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]